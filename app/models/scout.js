'use strict';
module.exports = function(sequelize, DataTypes) {
        var Scout = sequelize.define('Scout', {
        	cum: DataTypes.STRING, 
        	foto: DataTypes.STRING,
        	nombre: DataTypes.STRING,
        	genero: DataTypes.STRING,
        	fechanacimiento: DataTypes.DATE,
        	escuela: DataTypes.STRING,
        	email: DataTypes.STRING,
        	telefono: DataTypes.STRING,
        	domicilio: DataTypes.STRING,
        	porcentaje: DataTypes.STRING,
        	contacto1: DataTypes.STRING,
            parentezco1: DataTypes.STRING,
            contacto2: DataTypes.STRING,
            parentezco2: DataTypes.STRING,
            telefono1: DataTypes.STRING,
            telefono2: DataTypes.STRING,
            emailcontacto: DataTypes.STRING,
            tiposangre: DataTypes.STRING,
            peso: DataTypes.STRING,
            estatura: DataTypes.STRING,
            noafiliacion: DataTypes.STRING,
            seguro: DataTypes.STRING,
            especifique: DataTypes.STRING,
            pieplano: DataTypes.INTEGER,
            zapato: DataTypes.INTEGER,
            operacion: DataTypes.INTEGER,
            limitacion: DataTypes.INTEGER,
            transfusion: DataTypes.INTEGER,
            alergia: DataTypes.INTEGER,
            enfermedad: DataTypes.INTEGER,
            tratamiento: DataTypes.INTEGER,
            veroir: DataTypes.INTEGER,
            aparato: DataTypes.INTEGER,
            dieta: DataTypes.INTEGER,
            drogas: DataTypes.INTEGER,
            vacunas: DataTypes.INTEGER,
            embarazo: DataTypes.INTEGER,
            espoperacion: DataTypes.STRING,
            esplimitacion: DataTypes.STRING,
            esptransfusion: DataTypes.STRING,
            espalergia: DataTypes.STRING,
            espenfermedad: DataTypes.STRING,
            esptratamiento: DataTypes.STRING,
            espveroir: DataTypes.STRING,
            espaparato: DataTypes.STRING,
            espdieta: DataTypes.STRING,
            espdrogas: DataTypes.STRING,
            promesa: DataTypes.INTEGER,
            etapa: DataTypes.INTEGER,
            deporte: DataTypes.INTEGER,
            ecologia: DataTypes.INTEGER,
            expresion: DataTypes.INTEGER,
            humanidades: DataTypes.INTEGER,
            rescate: DataTypes.INTEGER,
            ciencia: DataTypes.INTEGER,
            vida: DataTypes.INTEGER,
            desarrollo: DataTypes.INTEGER,
            enlace: DataTypes.INTEGER,
            fechapromesa: DataTypes.DATE,
            fechaetapa1: DataTypes.DATE,
            fechaetapa2: DataTypes.DATE,
            fechaetapa3: DataTypes.DATE,
            fechaetapa4: DataTypes.DATE,
            fechadeporte1: DataTypes.DATE,
            fechadeporte2: DataTypes.DATE,
            fechadeporte3: DataTypes.DATE,
            fechadeporte4: DataTypes.DATE,
            fechaecologia1: DataTypes.DATE,
            fechaecologia2: DataTypes.DATE,
            fechaecologia3: DataTypes.DATE,
            fechaecologia4: DataTypes.DATE,
            fechaexpresion1: DataTypes.DATE,
            fechaexpresion2: DataTypes.DATE,
            fechaexpresion3: DataTypes.DATE,
            fechaexpresion4: DataTypes.DATE,
            fechahumanidades1: DataTypes.DATE,
            fechahumanidades2: DataTypes.DATE,
            fechahumanidades3: DataTypes.DATE,
            fechahumanidades4: DataTypes.DATE,
            fecharescate1: DataTypes.DATE,
            fecharescate2: DataTypes.DATE,
            fecharescate3: DataTypes.DATE,
            fecharescate4: DataTypes.DATE,
            fechaciencia1: DataTypes.DATE,
            fechaciencia2: DataTypes.DATE,
            fechaciencia3: DataTypes.DATE,
            fechaciencia4: DataTypes.DATE,
            fechavida1: DataTypes.DATE,
            fechavida2: DataTypes.DATE,
            fechavida3: DataTypes.DATE,
            fechavida4: DataTypes.DATE,
            fechadesarrollo1: DataTypes.DATE,
            fechadesarrollo2: DataTypes.DATE,
            fechadesarrollo3: DataTypes.DATE,
            fechaenlace: DataTypes.DATE
	}, {
		//set the timestamps to be underscored: (created_at, updated_at)
		underscored: true,
		classMethods: {
			associate: function(models) {

			}
		}
	});
	return Scout;
};